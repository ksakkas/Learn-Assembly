.data
	message: .asciiz "Welcome to the world of MIPS programming\n"
	message2: .asciiz "Iteration: "
	message3: .asciiz "\n"
	test2: .asciiz "test"
	first: .word 21, 14, 26, 39

.text
.globl main

_start:
main:
	la $4, message  #Φόρτωση της χδιεύθυνσης της ετικέτας message στο καταχωρητή  $a0 ($4)
	jal putstr       #Μεταπήδηση στην ετικέτα putstr
	nop
	
	la $16, first   #Φόρτωση της διεύθυνσης της ετικέτας message στο καταχωρητή  $s0 ($16)
	ori $20, 0x0    #Αρχικοποίηση του καταχωρητή $s4 ($20) με το δεκαεξαδικό 0 και με την μέθοδο της λογικής πράξης OR
	move $17, $0    #Αρχικοποίηση του καταχωρητή $s1 ($17) με 0 ή αλλιώς μετακίνηση του 0 στο $s1

loop:                     #Ετικέτα
	slti $18, $17, 0x04    #Ο καταχωρητής $s2 ($18) τίθεται ίσος µε 1 αν η τιµή στον  καταχωρητή $s1($17) είναι µικρότερη από την τιµή 3, αλλιώς ο καταχωρητής $s2 τίθεται ίσος µε 0
	beq $18, $0, end_lop  #Aν τιμή του καταχ. $s2 ίση με την τιμή του 0, πήγαινε στην ετικέτα end_lop
	
	lw $19, 0($16)        #Φόρτωση των δεδομένων απο την θέση 0 του καταχωρητή $s0($16) και αποθήκευση αυτου στον καταχωρητή $s3 ($19)
	
	add $20, $20, $19     #Πρόσθεση των καταχωρητών $s4 + $s0 και αποθήκευση στο $s4
	addi $16, $16, 0x04     #Πρόσθεση τoυ καταχωρητή $s0 + 4 και αποθήκευση στο $s0
	addi $17, $17, 1      #Άμεση Πρόσθεση στο καταχωρητή $s1 τον καταχωρητή $s1 + 1

	la $4, message2      #Φόρτωση της διεύθυνσης της ετικέτας message2 στο καταχωρητή  $a0
	jal putstr           #Μεταπήδηση στην ετικέτα putstr
	nop
	
	move $4, $20         #Μεταφορά στον καταχωρητή $a0 το περιεχόμενο του καταχωρητή $s1
	jal writeint         #Μεταπήδηση στην ετικέτα putstr
	nop
	
	la $4, message3     #Φόρτωση της διεύθυνσης της ετικέτας message3 στο καταχωρητή  $a0
	jal putstr
	nop
j loop
	
end_lop: 
	move $4, $20		#Μεταφορά στον καταχωρητή $a0 το περιεχόμενο του καταχωρητή $s1
	jal writeint		#Μεταπήδηση στην ετικέτα writeint
	j _exit				#Μεταπήδηση στην ετικέτα _exit
	nop
	
putstr:
	li $v0, 4			# Άμεση φόρτωση στο καταχωρητή $v0 την τιμή 4 (syscall για print_string)						
	la $a0, message		# Φόρτωση της διέυθυνσης του message στο καταχωρητή $a0 (argument to print_string call)						
	syscall									
	jr $ra				#Επιστροφή διεύθυνσης καταχωρητή
	
writeint:
   li $v0, 1			# Άμεση φόρτωση στο καταχωρητή $v0 την τιμή 1 (syscall για print_int)
   syscall
   jr $ra				#Επιστροφή διεύθυνσης καταχωρητή

test1:
	li $v0, 4			# Άμεση φόρτωση στο καταχωρητή $v0 την τιμή 4 (syscall για print_string)								
	la $a0, test2	    # Φόρτωση της διέυθυνσης του message στο καταχωρητή $a0 (argument to print_string call)					
	syscall	
	jr $ra              #Επιστροφή διεύθυνσης καταχωρητή
	
_exit:
   li  $v0, 10          # Άμεση φόρτωση στο καταχωρητή $v0 την τιμή 10 (syscall για exit)
   syscall

	